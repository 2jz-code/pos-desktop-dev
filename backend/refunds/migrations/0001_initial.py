# Generated by Django 4.2.13 on 2025-10-30 20:42

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('payments', '0017_add_allocation_policy_snapshot'),
        ('tenant', '0006_tenant_internal_notes_tenant_ownership_type_and_more'),
        ('orders', '0027_add_tax_amount_nullable'),
    ]

    operations = [
        migrations.CreateModel(
            name='RefundItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity_refunded', models.PositiveIntegerField(help_text='How many units of this item were refunded')),
                ('amount_per_unit', models.DecimalField(decimal_places=2, help_text='Price per unit at time of refund (usually matches price_at_sale)', max_digits=10)),
                ('total_refund_amount', models.DecimalField(decimal_places=2, help_text='Total refund for this item (quantity * amount_per_unit)', max_digits=10)),
                ('tax_refunded', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Proportional tax refunded for this item', max_digits=10)),
                ('modifier_refund_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Refund amount from modifiers on this item', max_digits=10)),
                ('tip_refunded', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Proportional tip refunded for this item', max_digits=10)),
                ('surcharge_refunded', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Proportional surcharge refunded for this item', max_digits=10)),
                ('refund_reason', models.TextField(blank=True, help_text='Reason for refunding this item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_item', models.ForeignKey(help_text='The original order item being refunded', on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to='orders.orderitem')),
                ('payment_transaction', models.ForeignKey(help_text='The refund transaction that processed this item refund', on_delete=django.db.models.deletion.CASCADE, related_name='refunded_items', to='payments.paymenttransaction')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_items', to='tenant.tenant')),
            ],
            options={
                'db_table': 'refunds_refund_item',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment_transaction', 'order_item'], name='refunds_ref_payment_09194a_idx'), models.Index(fields=['order_item'], name='refunds_ref_order_i_065a74_idx'), models.Index(fields=['created_at'], name='refunds_ref_created_fd69f2_idx')],
            },
        ),
        migrations.CreateModel(
            name='RefundAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(help_text="Action performed (e.g., 'refund_initiated', 'refund_completed', 'refund_failed')", max_length=50)),
                ('source', models.CharField(help_text='Source of refund (POS, ADMIN, API, WEBHOOK)', max_length=50)),
                ('refund_amount', models.DecimalField(decimal_places=2, help_text='Amount being refunded', max_digits=10)),
                ('reason', models.TextField(blank=True, help_text='Reason for refund')),
                ('device_info', models.JSONField(blank=True, help_text='Device information (IP, user agent, terminal ID, etc.)', null=True)),
                ('provider_response', models.JSONField(blank=True, help_text='Raw response from payment provider', null=True)),
                ('status', models.CharField(help_text='Status of this action (success, failed, pending)', max_length=50)),
                ('error_message', models.TextField(blank=True, help_text='Error message if action failed')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('initiated_by', models.ForeignKey(blank=True, help_text='User who initiated the refund', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_refunds', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(help_text='The payment being refunded', on_delete=django.db.models.deletion.PROTECT, related_name='refund_audit_logs', to='payments.payment')),
                ('payment_transaction', models.ForeignKey(blank=True, help_text='The refund transaction (if created)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refund_audit_logs', to='payments.paymenttransaction')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_audit_logs', to='tenant.tenant')),
            ],
            options={
                'db_table': 'refunds_refund_audit_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['payment', 'created_at'], name='refunds_ref_payment_24436a_idx'), models.Index(fields=['payment_transaction'], name='refunds_ref_payment_415e53_idx'), models.Index(fields=['initiated_by'], name='refunds_ref_initiat_1460eb_idx'), models.Index(fields=['action', 'status'], name='refunds_ref_action_fc555a_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExchangeSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount refunded from original order', max_digits=10)),
                ('new_order_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount of new order', max_digits=10)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Balance due (negative = refund to customer, positive = customer owes)', max_digits=10)),
                ('session_status', models.CharField(default='INITIATED', help_text='Status of exchange session (INITIATED, REFUND_COMPLETED, NEW_ORDER_CREATED, COMPLETED, CANCELLED)', max_length=50)),
                ('exchange_reason', models.TextField(blank=True, help_text='Reason for exchange')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('new_order', models.ForeignKey(blank=True, help_text='The new order for replacement items', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exchange_sessions_as_new', to='orders.order')),
                ('new_payment', models.ForeignKey(blank=True, help_text='The new payment for replacement items', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exchange_sessions_as_new', to='payments.payment')),
                ('original_order', models.ForeignKey(help_text='The original order being returned/exchanged', on_delete=django.db.models.deletion.PROTECT, related_name='exchange_sessions_as_original', to='orders.order')),
                ('original_payment', models.ForeignKey(help_text='The original payment being refunded', on_delete=django.db.models.deletion.PROTECT, related_name='exchange_sessions_as_original', to='payments.payment')),
                ('processed_by', models.ForeignKey(blank=True, help_text='User who processed the exchange', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_exchanges', to=settings.AUTH_USER_MODEL)),
                ('refund_transaction', models.ForeignKey(blank=True, help_text='The refund transaction for returned items', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exchange_sessions_as_refund', to='payments.paymenttransaction')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_sessions', to='tenant.tenant')),
            ],
            options={
                'db_table': 'refunds_exchange_session',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['original_order'], name='refunds_exc_origina_2d0967_idx'), models.Index(fields=['new_order'], name='refunds_exc_new_ord_d16230_idx'), models.Index(fields=['session_status'], name='refunds_exc_session_759456_idx'), models.Index(fields=['created_at'], name='refunds_exc_created_950efd_idx')],
            },
        ),
    ]
