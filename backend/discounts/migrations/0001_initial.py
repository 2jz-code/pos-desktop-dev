# Generated by Django 4.2.13 on 2025-06-17 17:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED_AMOUNT', 'Fixed Amount'), ('BUY_X_GET_Y', 'Buy X Get Y')], max_length=20)),
                ('scope', models.CharField(choices=[('ORDER', 'Entire Order'), ('PRODUCT', 'Specific Products'), ('CATEGORY', 'Specific Categories')], default='ORDER', max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='The value of the discount (percentage or fixed amount). Not used for BOGO.', max_digits=10)),
                ('min_purchase_amount', models.DecimalField(blank=True, decimal_places=2, help_text='The minimum subtotal required for the discount to apply.', max_digits=10, null=True)),
                ('buy_quantity', models.PositiveIntegerField(blank=True, help_text="For 'Buy X Get Y' discounts, the quantity of items the customer must buy (X).", null=True)),
                ('get_quantity', models.PositiveIntegerField(blank=True, help_text="For 'Buy X Get Y' discounts, the quantity of items the customer gets for free (Y).", null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, help_text='The date and time when the discount becomes active.', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='The date and time when the discount expires.', null=True)),
                ('applicable_categories', models.ManyToManyField(blank=True, to='products.category')),
                ('applicable_products', models.ManyToManyField(blank=True, to='products.product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
