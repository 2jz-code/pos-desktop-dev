# Generated by Django 4.2.13 on 2025-10-02 00:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("tenant", "0001_initial"),
        ("products", "0023_product_has_modifiers_and_more"),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="product",
            name="product_is_public_idx",
        ),
        migrations.RemoveIndex(
            model_name="product",
            name="product_track_inventory_idx",
        ),
        migrations.AlterUniqueTogether(
            name="modifieroption",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="productmodifierset",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="productspecificoption",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="category",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="categories",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="modifieroption",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modifier_options",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="modifierset",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modifier_sets",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="productmodifierset",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_modifier_sets_link",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="productspecificoption",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_specific_options",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="producttype",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_types",
                to="tenant.tenant",
            ),
        ),
        migrations.AddField(
            model_name="tax",
            name="tenant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="taxes",
                to="tenant.tenant",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="name",
            field=models.CharField(
                help_text="Name of the product category (unique per tenant).",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="modifierset",
            name="internal_name",
            field=models.CharField(
                help_text="Internal name for easy reference, e.g., 'drink-size' (unique per tenant)",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="barcode",
            field=models.CharField(
                blank=True,
                help_text="Product barcode for scanning (unique per tenant)",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="producttype",
            name="name",
            field=models.CharField(
                help_text="Name of the product type (unique per tenant).",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="tax",
            name="name",
            field=models.CharField(
                help_text="Name of the tax, e.g., 'VAT' or 'Sales Tax' (unique per tenant).",
                max_length=50,
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["tenant", "is_active"], name="products_ca_tenant__e78933_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["tenant", "is_public"], name="products_ca_tenant__fc3725_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="modifieroption",
            index=models.Index(
                fields=["tenant", "modifier_set"], name="products_mo_tenant__1c817c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="modifierset",
            index=models.Index(
                fields=["tenant", "internal_name"],
                name="products_mo_tenant__cfafff_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["tenant", "is_public"], name="products_pr_tenant__33cb60_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["tenant", "track_inventory"],
                name="products_pr_tenant__dfb153_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["tenant", "barcode"], name="products_pr_tenant__782c31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["tenant", "category"], name="products_pr_tenant__a8981a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productmodifierset",
            index=models.Index(
                fields=["tenant", "product"], name="products_pr_tenant__ac894a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productspecificoption",
            index=models.Index(
                fields=["tenant"], name="products_pr_tenant__3b16bf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="producttype",
            index=models.Index(
                fields=["tenant", "is_active"], name="products_pr_tenant__36c0c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tax",
            index=models.Index(
                fields=["tenant", "name"], name="products_ta_tenant__b3bb82_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                fields=("tenant", "name"), name="unique_category_name_per_tenant"
            ),
        ),
        migrations.AddConstraint(
            model_name="modifieroption",
            constraint=models.UniqueConstraint(
                fields=("tenant", "modifier_set", "name"),
                name="unique_modifieroption_name_per_set_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="modifierset",
            constraint=models.UniqueConstraint(
                fields=("tenant", "internal_name"),
                name="unique_modifierset_internal_name_per_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                condition=models.Q(("barcode__isnull", False)),
                fields=("tenant", "barcode"),
                name="unique_product_barcode_per_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="productmodifierset",
            constraint=models.UniqueConstraint(
                fields=("tenant", "product", "modifier_set"),
                name="unique_productmodifierset_per_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="productspecificoption",
            constraint=models.UniqueConstraint(
                fields=("tenant", "product_modifier_set", "modifier_option"),
                name="unique_productspecificoption_per_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="producttype",
            constraint=models.UniqueConstraint(
                fields=("tenant", "name"), name="unique_producttype_name_per_tenant"
            ),
        ),
        migrations.AddConstraint(
            model_name="tax",
            constraint=models.UniqueConstraint(
                fields=("tenant", "name"), name="unique_tax_name_per_tenant"
            ),
        ),
    ]
