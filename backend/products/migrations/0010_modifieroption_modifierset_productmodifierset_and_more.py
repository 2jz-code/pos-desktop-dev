# Generated by Django 4.2.13 on 2025-07-26 16:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0009_category_is_public_product_is_public'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModifierOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price_delta', models.DecimalField(decimal_places=2, default=0.0, help_text='The amount to add or subtract from the base product price.', max_digits=10)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ModifierSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Customer-facing name, e.g., 'Choose your size'", max_length=100)),
                ('internal_name', models.CharField(help_text="Internal name for easy reference, e.g., 'drink-size'", max_length=100, unique=True)),
                ('selection_type', models.CharField(choices=[('SINGLE', 'Single Choice'), ('MULTIPLE', 'Multiple Choices')], default='SINGLE', max_length=10)),
                ('min_selections', models.PositiveIntegerField(default=0, help_text='Minimum required selections (0 for optional)')),
                ('max_selections', models.PositiveIntegerField(blank=True, help_text='Maximum allowed selections (null for unlimited)', null=True)),
                ('triggered_by_option', models.ForeignKey(blank=True, help_text='If set, this group will only appear when the selected option is chosen.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggers_modifier_sets', to='products.modifieroption')),
            ],
        ),
        migrations.CreateModel(
            name='ProductModifierSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='The order this modifier set appears for this product.')),
                ('is_required_override', models.BooleanField(blank=True, help_text="Override the 'min_selections' rule for this product. True makes it required.", null=True)),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpecificOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifier_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.modifieroption')),
                ('product_modifier_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productmodifierset')),
            ],
            options={
                'unique_together': {('product_modifier_set', 'modifier_option')},
            },
        ),
        migrations.AddField(
            model_name='productmodifierset',
            name='extra_options',
            field=models.ManyToManyField(blank=True, related_name='extra_in_product_sets', through='products.ProductSpecificOption', to='products.modifieroption'),
        ),
        migrations.AddField(
            model_name='productmodifierset',
            name='hidden_options',
            field=models.ManyToManyField(blank=True, help_text='Hide specific options from this set for this product only.', related_name='hidden_in_product_sets', to='products.modifieroption'),
        ),
        migrations.AddField(
            model_name='productmodifierset',
            name='modifier_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_modifier_sets', to='products.modifierset'),
        ),
        migrations.AddField(
            model_name='productmodifierset',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_modifier_sets', to='products.product'),
        ),
        migrations.AddField(
            model_name='modifieroption',
            name='modifier_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='products.modifierset'),
        ),
        migrations.AddField(
            model_name='product',
            name='modifier_sets',
            field=models.ManyToManyField(blank=True, related_name='products', through='products.ProductModifierSet', to='products.modifierset'),
        ),
        migrations.AlterUniqueTogether(
            name='productmodifierset',
            unique_together={('product', 'modifier_set')},
        ),
    ]
