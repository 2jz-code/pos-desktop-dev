# Generated by Django 4.2.13 on 2025-08-02 19:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0012_modifieroption_is_product_specific'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0005_location_expiration_threshold_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='inventorystock',
            name='archived_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this record was archived.', null=True),
        ),
        migrations.AddField(
            model_name='inventorystock',
            name='archived_by',
            field=models.ForeignKey(blank=True, help_text='User who archived this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_archived', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventorystock',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Designates whether this record is active. Inactive records are considered archived/soft-deleted.'),
        ),
        migrations.AddField(
            model_name='location',
            name='archived_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this record was archived.', null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='archived_by',
            field=models.ForeignKey(blank=True, help_text='User who archived this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_archived', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='location',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Designates whether this record is active. Inactive records are considered archived/soft-deleted.'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='archived_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this record was archived.', null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='archived_by',
            field=models.ForeignKey(blank=True, help_text='User who archived this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_archived', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipe',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Designates whether this record is active. Inactive records are considered archived/soft-deleted.'),
        ),
        migrations.AddField(
            model_name='recipeitem',
            name='archived_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this record was archived.', null=True),
        ),
        migrations.AddField(
            model_name='recipeitem',
            name='archived_by',
            field=models.ForeignKey(blank=True, help_text='User who archived this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_archived', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipeitem',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Designates whether this record is active. Inactive records are considered archived/soft-deleted.'),
        ),
        migrations.AlterField(
            model_name='inventorystock',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_levels', to='inventory.location'),
        ),
        migrations.AlterField(
            model_name='inventorystock',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_levels', to='products.product'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='menu_item',
            field=models.OneToOneField(help_text='The menu item this recipe is for.', limit_choices_to={'product_type': 'menu'}, on_delete=django.db.models.deletion.PROTECT, related_name='recipe', to='products.product'),
        ),
        migrations.AlterField(
            model_name='recipeitem',
            name='product',
            field=models.ForeignKey(help_text='The product used as an ingredient.', on_delete=django.db.models.deletion.PROTECT, to='products.product'),
        ),
        migrations.AlterField(
            model_name='recipeitem',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.recipe'),
        ),
    ]
